---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: namespace-lister
---
apiVersion: v1
kind: Service
metadata:
  name: sisud
spec:
  ports:
  - name: tcp-sisud
    port: 25456
    protocol: TCP
    targetPort: 25456
  selector:
    app: sisud
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sisud
  labels:
    app: sisud
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: sisud
  template:
    metadata:
      labels:
        app: sisud
    spec:
      serviceAccountName: namespace-lister
      initContainers:
      - name: kubectl-init
        image: bitnami/kubectl:1.22
        imagePullPolicy: IfNotPresent
        command:
          # TODO: this should fill in the peers for sisud's configuration.
          - kubectl
          - get
          - ns
          - "-l"
          - sisu.network/purpose=test
          - "-oname"
      - name: populate-sisu-dir # Copy the files from /root/.sisu into the shared volume.
        image: sisu.test/sisu-all:latest
        imagePullPolicy: IfNotPresent
        command:
          - bash
          - '-c'
          - 'cp -R /root/.sisu/. /sisu/'
        volumeMounts:
          - name: sisudir
            mountPath: /sisu
      - name: init-sisu # Initial configuration for sisu
        image: sisu.test/sisu-all:latest
        imagePullPolicy: IfNotPresent
        command:
          - bash
          - '-eu'
          - '-c'
          - |
             # TODO: don't hardcode the config string.
             sisud testnet --v 1 --output-dir ./output --config-string '[{"sisu_ip":"sisud.sisu","dheart_ip":"dheart.sisu","deyes_ip":"deyes.sisu","sql":{"host":"mysql.mysql","port":3306,"username":"root","password":"password"}}]' &&
             sisud keys add --keyring-backend=test k1 &&
             sisud init --chain-id=kind-chain sisu-1 # TODO: don't hardcode sisu-1
        workingDir: /root
        env:
          - name: HOME_DIR
            value: /root
        volumeMounts:
          - name: sisudir
            mountPath: /root/.sisu
      containers:
      - command:
          - sisud
          - start
        workingDir: /root
        image: sisu.test/sisu-all:latest
        imagePullPolicy: IfNotPresent
        name: sisud
        env:
          - name: HOME_DIR
            value: /root
        ports:
          - containerPort: 25456
            name: tcp-sisud
        volumeMounts:
          - name: sisudir
            mountPath: /root/.sisu
      - command: # Temporary container for debugging.
          - sleep
          - '999999'
        workingDir: /root
        image: sisu.test/sisu-all:latest
        imagePullPolicy: IfNotPresent
        name: sleep
        env:
          - name: HOME_DIR
            value: /root
        volumeMounts:
          - name: sisudir
            mountPath: /root/.sisu
      volumes:
        - name: sisudir
          emptyDir: {}
