---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: namespace-lister
---
apiVersion: v1
kind: Service
metadata:
  name: sisud
spec:
  ports:
  - name: tcp-sisud
    port: 25456
    protocol: TCP
    targetPort: 25456
  selector:
    app: sisud
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sisud
  labels:
    app: sisud
spec:
  replicas: 1
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: sisud
  template:
    metadata:
      labels:
        app: sisud
    spec:
      serviceAccountName: namespace-lister
      initContainers:
      - name: populate-sisu-dir # Copy the files from /root/.sisu into the shared volume.
        image: sisu.test/sisu-all:latest
        imagePullPolicy: IfNotPresent
        command:
          - bash
          - '-c'
          - 'cp -R /root/.sisu/. /sisu/'
        volumeMounts:
          - name: sisudir
            mountPath: /sisu
      - name: init-sisu # Initial configuration for sisu
        image: sisu.test/sisu-all:latest
        imagePullPolicy: IfNotPresent
        command:
          - bash
          - '-eu'
          - '-c'
          - |
            sisud testnet --v $SISU_COUNT --output-dir ./output --config-string "$(
              echo '{'
              echo '"chains":[{"name":"ganache1","rpc":"http://ganache1:7545"},{"name":"ganache2","rpc":"http://ganache2:7545"}],'
              echo '"nodes":['
              for i in $(seq 1 $SISU_COUNT); do
                if [ "$i" != 1 ]; then echo ','; fi
                printf '{"sisu_ip": "sisud.sisu-%d", "dheart_ip":"dheart.sisu-%d","deyes_ip":"deyes.sisu-%d","sql":{"host":"mysql.mysql","port":3306,"username":"root","password":"password"}}' $i $i $i
              done
              echo ']'
              echo '}'
            )"
          workingDir: /root
        workingDir: /root
        env:
          - name: HOME_DIR
            value: /root
          - name: SISU_COUNT
            valueFrom:
              configMapKeyRef:
                name: sisu-cluster
                key: node-count
          - name: SISU_INDEX
            valueFrom:
              configMapKeyRef:
                name: sisu-cluster
                key: index
        volumeMounts:
          - name: sisudir
            mountPath: /root/.sisu
      containers:
      - command:
          - sisud
          - start
        workingDir: /root
        image: sisu.test/sisu-all:latest
        imagePullPolicy: IfNotPresent
        name: sisud
        env:
          - name: HOME_DIR
            value: /root
        ports:
          - containerPort: 25456
            name: tcp-sisud
        volumeMounts:
          - name: sisudir
            mountPath: /root/.sisu
      - command: # Temporary container for debugging.
          - sleep
          - '999999'
        workingDir: /root
        image: sisu.test/sisu-all:latest
        imagePullPolicy: IfNotPresent
        name: sleep
        env:
          - name: HOME_DIR
            value: /root
        volumeMounts:
          - name: sisudir
            mountPath: /root/.sisu
      volumes:
        - name: sisudir
          emptyDir: {}
