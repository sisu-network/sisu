// Code generated by MockGen. DO NOT EDIT.
// Source: x/tss/keeper/keeper.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	types "github.com/sisu-network/cosmos-sdk/types"
	types0 "github.com/sisu-network/sisu/x/tss/types"
)

// MockKeeper is a mock of Keeper interface.
type MockKeeper struct {
	ctrl     *gomock.Controller
	recorder *MockKeeperMockRecorder
}

// MockKeeperMockRecorder is the mock recorder for MockKeeper.
type MockKeeperMockRecorder struct {
	mock *MockKeeper
}

// NewMockKeeper creates a new mock instance.
func NewMockKeeper(ctrl *gomock.Controller) *MockKeeper {
	mock := &MockKeeper{ctrl: ctrl}
	mock.recorder = &MockKeeperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKeeper) EXPECT() *MockKeeperMockRecorder {
	return m.recorder
}

// GetAllEthKeyAddrs mocks base method.
func (m *MockKeeper) GetAllEthKeyAddrs(ctx types.Context) (map[string]map[string]bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllEthKeyAddrs", ctx)
	ret0, _ := ret[0].(map[string]map[string]bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllEthKeyAddrs indicates an expected call of GetAllEthKeyAddrs.
func (mr *MockKeeperMockRecorder) GetAllEthKeyAddrs(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllEthKeyAddrs", reflect.TypeOf((*MockKeeper)(nil).GetAllEthKeyAddrs), ctx)
}

// GetAllPubKeys mocks base method.
func (m *MockKeeper) GetAllPubKeys(ctx types.Context) map[string][]byte {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllPubKeys", ctx)
	ret0, _ := ret[0].(map[string][]byte)
	return ret0
}

// GetAllPubKeys indicates an expected call of GetAllPubKeys.
func (mr *MockKeeperMockRecorder) GetAllPubKeys(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllPubKeys", reflect.TypeOf((*MockKeeper)(nil).GetAllPubKeys), ctx)
}

// IsKeygenProposalExisted mocks base method.
func (m *MockKeeper) IsKeygenProposalExisted(ctx types.Context, msg *types0.KeygenProposal) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsKeygenProposalExisted", ctx, msg)
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsKeygenProposalExisted indicates an expected call of IsKeygenProposalExisted.
func (mr *MockKeeperMockRecorder) IsKeygenProposalExisted(ctx, msg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsKeygenProposalExisted", reflect.TypeOf((*MockKeeper)(nil).IsKeygenProposalExisted), ctx, msg)
}

// IsObservedTxExisted mocks base method.
func (m *MockKeeper) IsObservedTxExisted(ctx types.Context, msg *types0.ObservedTx) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsObservedTxExisted", ctx, msg)
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsObservedTxExisted indicates an expected call of IsObservedTxExisted.
func (mr *MockKeeperMockRecorder) IsObservedTxExisted(ctx, msg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsObservedTxExisted", reflect.TypeOf((*MockKeeper)(nil).IsObservedTxExisted), ctx, msg)
}

// IsTxOutExisted mocks base method.
func (m *MockKeeper) IsTxOutExisted(ctx types.Context, msg *types0.TxOut) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "IsTxOutExisted", ctx, msg)
	ret0, _ := ret[0].(bool)
	return ret0
}

// IsTxOutExisted indicates an expected call of IsTxOutExisted.
func (mr *MockKeeperMockRecorder) IsTxOutExisted(ctx, msg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "IsTxOutExisted", reflect.TypeOf((*MockKeeper)(nil).IsTxOutExisted), ctx, msg)
}

// SaveEthKeyAddrs mocks base method.
func (m *MockKeeper) SaveEthKeyAddrs(ctx types.Context, chain string, keyAddrs map[string]bool) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveEthKeyAddrs", ctx, chain, keyAddrs)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveEthKeyAddrs indicates an expected call of SaveEthKeyAddrs.
func (mr *MockKeeperMockRecorder) SaveEthKeyAddrs(ctx, chain, keyAddrs interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveEthKeyAddrs", reflect.TypeOf((*MockKeeper)(nil).SaveEthKeyAddrs), ctx, chain, keyAddrs)
}

// SaveKeygenProposal mocks base method.
func (m *MockKeeper) SaveKeygenProposal(ctx types.Context, msg *types0.KeygenProposal) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SaveKeygenProposal", ctx, msg)
}

// SaveKeygenProposal indicates an expected call of SaveKeygenProposal.
func (mr *MockKeeperMockRecorder) SaveKeygenProposal(ctx, msg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveKeygenProposal", reflect.TypeOf((*MockKeeper)(nil).SaveKeygenProposal), ctx, msg)
}

// SaveObservedTx mocks base method.
func (m *MockKeeper) SaveObservedTx(ctx types.Context, msg *types0.ObservedTx) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SaveObservedTx", ctx, msg)
}

// SaveObservedTx indicates an expected call of SaveObservedTx.
func (mr *MockKeeperMockRecorder) SaveObservedTx(ctx, msg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveObservedTx", reflect.TypeOf((*MockKeeper)(nil).SaveObservedTx), ctx, msg)
}

// SavePubKey mocks base method.
func (m *MockKeeper) SavePubKey(ctx types.Context, chain string, keyBytes []byte) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SavePubKey", ctx, chain, keyBytes)
}

// SavePubKey indicates an expected call of SavePubKey.
func (mr *MockKeeperMockRecorder) SavePubKey(ctx, chain, keyBytes interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SavePubKey", reflect.TypeOf((*MockKeeper)(nil).SavePubKey), ctx, chain, keyBytes)
}

// SaveTxOut mocks base method.
func (m *MockKeeper) SaveTxOut(ctx types.Context, msg *types0.TxOut) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SaveTxOut", ctx, msg)
}

// SaveTxOut indicates an expected call of SaveTxOut.
func (mr *MockKeeperMockRecorder) SaveTxOut(ctx, msg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveTxOut", reflect.TypeOf((*MockKeeper)(nil).SaveTxOut), ctx, msg)
}
